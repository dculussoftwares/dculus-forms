services:
  # MongoDB for database
  mongodb:
    image: mongo:7.0
    container_name: dculus-integration-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: dculus_test
    volumes:
      - mongodb_data:/data/db
      - ./tests/integration/setup/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dculus-integration
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: dculus-integration-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - dculus-integration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: dculus-integration-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin123;
      mc mb minio/dculus-public --ignore-existing;
      mc mb minio/dculus-private --ignore-existing;
      mc policy set public minio/dculus-public;
      echo 'MinIO buckets initialized successfully';
      "
    networks:
      - dculus-integration

  # Backend service built from local source
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: production
    container_name: dculus-integration-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: test
      PORT: 4000
      DATABASE_URL: mongodb://admin:password123@mongodb:27017/dculus_test?authSource=admin
      JWT_SECRET: test-jwt-secret-integration-12345678901234567890
      BETTER_AUTH_SECRET: test-better-auth-secret-integration-12345678901234567890
      BETTER_AUTH_BASE_URL: http://localhost:4000
      BETTER_AUTH_TRUSTED_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:4000
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_PUBLIC_BUCKET_NAME: dculus-public
      S3_PRIVATE_BUCKET_NAME: dculus-private
      S3_CDN_URL: http://localhost:9000
    depends_on:
      mongodb:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    networks:
      - dculus-integration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

volumes:
  mongodb_data:
    driver: local
  minio_data:
    driver: local

networks:
  dculus-integration:
    driver: bridge