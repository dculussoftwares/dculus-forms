Github actions:



env:
  # Azure Configuration
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true


        - name: Azure CLI login
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        - name: Setup Terraform backend resources
          id: backend
          run: |
            RESOURCE_GROUP_NAME=dculus-global-terraform-assets-resource-grp
            STORAGE_ACCOUNT_NAME=dculusterraformstates
            CONTAINER_NAME=backend-container-app-deployment

            echo "Setting up Terraform backend resources..."

            # Create resource group if it doesn't exist
            az group create --name $RESOURCE_GROUP_NAME --location eastus

            # Create storage account if it doesn't exist
            az storage account create \
              --resource-group $RESOURCE_GROUP_NAME \
              --name $STORAGE_ACCOUNT_NAME \
              --sku Standard_LRS \
              --encryption-services blob \
              --allow-blob-public-access false \
              --only-show-errors || echo "Storage account already exists"

            # Create blob container if it doesn't exist
            az storage container create \
              --name $CONTAINER_NAME \
              --account-name $STORAGE_ACCOUNT_NAME \
              --only-show-errors || echo "Container already exists"

            # Get storage account key for Terraform backend
            ACCOUNT_KEY=$(az storage account keys list \
              --resource-group $RESOURCE_GROUP_NAME \
              --account-name $STORAGE_ACCOUNT_NAME \
              --query '[0].value' -o tsv)
            echo "ARM_ACCESS_KEY=$ACCOUNT_KEY" >> $GITHUB_ENV

            echo "âœ… Terraform backend resources ready"



Terrrafrom backend:

backend "azurerm" {
    resource_group_name  = "dculus-global-terraform-assets-resource-grp"
    storage_account_name = "dculusterraformstates"
    container_name       = "backend-container-app-deployment"
    key                  = "terraform.tfstate"
  }