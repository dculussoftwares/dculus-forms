name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  # Build and deploy backend
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build backend
        run: pnpm --filter backend build

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-deploy
          path: apps/backend/dist
          retention-days: 1

      # Add your deployment steps here
      # Example for deploying to a cloud platform:
      # - name: Deploy to platform
      #   run: |
      #     # Your deployment commands here
      #     echo "Deploying backend to production..."

  # Build and deploy frontend apps
  deploy-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [form-app, form-viewer]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build ${{ matrix.app }}
        run: pnpm --filter ${{ matrix.app }} build

      - name: Upload ${{ matrix.app }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-deploy
          path: apps/${{ matrix.app }}/dist
          retention-days: 1

      # Add your deployment steps here
      # Example for deploying to a static hosting service:
      # - name: Deploy to platform
      #   run: |
      #     # Your deployment commands here
      #     echo "Deploying ${{ matrix.app }} to production..."

  # Notify deployment completion
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸš€ Deployed Applications:" >> $GITHUB_STEP_SUMMARY
          echo "- Backend: ${{ needs.deploy-backend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Form App: ${{ needs.deploy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Form Viewer: ${{ needs.deploy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“… Deployment Time:" >> $GITHUB_STEP_SUMMARY
          echo "- $(date)" >> $GITHUB_STEP_SUMMARY 